language: generic
env:
    global:
        - ENCRYPTION_LABEL: "56bf8f63e969"
        - COMMIT_AUTHOR_EMAIL: "philipp.sommer@unil.ch"
        - BUILD_DOCS: false
        - ONLINE_TESTS: false
matrix:
    include:
        - env:
            - BUILD_DOCS=true
            - PYTHON_VERSION=2.7
            - ONLINE_TESTS=true
          os: linux
        - env: PYTHON_VERSION=3.5
          os: linux
        - env: PYTHON_VERSION=2.7
          os: osx
        - env: PYTHON_VERSION=3.5
          os: osx
services:
    - postgresql
addons:  # install gfortran
  apt:
    packages:
    - gfortran
before_install:
    # make sure, gfortran and gnu-sed are installed
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          brew reinstall gcc;
          brew install gnu-sed --with-default-names;
      fi
install:
    # select the os name for the conda installer
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          OS_NAME=MacOSX;
      else
          OS_NAME=Linux;
      fi
    # We do this conditionally because it saves us some downloading if the
    # version is the same.
    - if [[ "$PYTHON_VERSION" == "2.7" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda2-latest-"${OS_NAME}"-x86_64.sh -O miniconda.sh;
      else
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-"${OS_NAME}"-x86_64.sh -O miniconda.sh;
      fi
    # set build_docs to the real value
    - if [[  "$BUILD_DOCS" == "true" && "$TRAVIS_PULL_REQUEST" == "false" && ("$TRAVIS_BRANCH" == "master" || "$TRAVIS_TAG" != "") ]]; then
          export BUILD_DOCS="true";
      else
          export BUILD_DOCS="false";
      fi
    - echo "$BUILD_DOCS"
    # make sure we use an 'innocent' default matplotlib environment
    - touch matplotlibrc
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - pip install pyyaml  # is somehow not included in the current conda installation
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Useful for debugging any issues with conda
    - conda info -a
    # install the conda constructor for releases
    - if [[ "$TRAVIS_TAG" != "" ]]; then
          conda install -n root constructor conda-build;
      fi
    - conda create -n test python="$PYTHON_VERSION" dask seaborn scipy numpy statsmodels matplotlib=1.5 xarray six
    - if [[ "$TRAVIS_TAG" != "" ]]; then
          sed -i "s/PYTHON_VERSION/${PYTHON_VERSION}*/" ci/gwgen_conda/construct.yaml;
      fi
    - source activate test
    - conda install -c conda-forge cartopy
    - pip install model-organization
    - pip install coveralls pytest
    # use latest development version
    # NOTE: Remove this when psyplot is stable enough
    - git clone "https://github.com/Chilipp/psyplot.git" -b dev
    - cd psyplot && python setup.py install
    - if [[ "$TRAVIS_TAG" != "" ]]; then
          sed -i "s#PSYPLOT_FILE#`bash test ../ci/build_conda_from_setup.py.sh . | tail -n 1`#" ../ci/gwgen_conda/construct.yaml;
      fi
    - cd .. && rm -rf psyplot
    # END PSYPLOT install
    - python setup.py install
    # install necessary module for the documentation and clone the existing
    # gh-pages for this repo into the *deploy* folder and clear everything
    - export REPO="$(git config remote.origin.url)"
    - if [[ "$BUILD_DOCS" == "true" ]]; then
          pip install sphinx-fortran sphinx==1.3.5 sphinx_rtd_theme ipython sphinx-argparse autodocsumm;
          git clone "$REPO" deploy;
          cd deploy;
          git checkout "gh-pages" || git checkout --orphan "gh-pages";
          ls -ad  * .* | grep -v ".git$" | grep -v "^\.$" | grep -v "^\.\.$" | xargs rm -r;
          touch .nojekyll;
          cd ..;
      fi
    # export the environment for debugging
    - conda env export -n test

script:
    # run test suite
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          coverage run --parallel-mode --concurrency=multiprocessing setup.py test -a "-v -m 'not fullrun and not long' --user postgres --offline";
      elif [[ "$ONLINE_TESTS" == "true" ]]; then
          coverage run --parallel-mode --concurrency=multiprocessing setup.py test -a "-v -m 'not fullrun' --user postgres";
      else
          coverage run --parallel-mode --concurrency=multiprocessing setup.py test -a "-v -m 'not fullrun' --user postgres --offline";
      fi
    # build docs
    - if [[ "$BUILD_DOCS" == "true" ]]; then
          sphinx-build docs deploy;
      fi
    # construct conda environment for releases
    - if [[ "$TRAVIS_TAG" != "" ]]; then
          sed -i "s#GWGEN_FILE#`bash test ci/build_conda_from_setup.py.sh . | tail -n 1`#" ci/gwgen_conda/construct.yaml &&
          constructor ci/gwgen_conda;
      fi
    - if [[ "$TRAVIS_TAG" != "" && "$BUILD_DOCS" == "true" ]]; then
          cd deploy && zip -r "../gwgen_docs_${TRAVIS_TAG}.zip" . -x *.git* && cd ..;
      fi

after_success:
    - coverage combine && coveralls
    # upload the documentation on master branch
    - if [[ "$BUILD_DOCS" == "true" && "$TRAVIS_TAG" == "" ]]; then
          bash ci/deploy.sh;
      fi

before_deploy:
    - ORIG_FILE=$(ls ci/gwgen_conda-*.sh)
    - export FINAL_FILE="${ORIG_FILE/.sh/}_${PYTHON_VERSION}.sh"
    - mv "$ORIG_FILE" "$FINAL_FILE"

deploy:
    - provider: releases
      user: Chilipp
      api_key:
          secure: hEjs//bXlppO5xWAYy4vXva+n/vTJlzfwp7+uz4IdfFCyBIxEi1D7F+5Bp7wXi1l/Up19e7/2VaaCLVoVS6trUb9KuItgr++/pTOg+hWx6Zdgv1iXW4gMshQ4KIkk/izs2l0D+eYF/AdqYqKLA9gO9KdgyqSomiXDOHNiDbGC4321nm9nbGIqCloTbBmrraFgr/B5fKvXG9nPHWfWvEyOXZzUZRD57OJn4IA5EyIN1Q8FTuobAg4LSo0NwTgEymmFySvyARRkyc5AZNsEFRVm7DTYqtKYEgl3W/g9NrZoGiZ/q/y5nioqM25eHTE5VN5VwFfZedzlqrcW58gqIGLQoJ65vpsnZT8g0fUfTKMfRP/jNENiwZ1uKUJHwLpaFxBdtRVnPlX06m95aWQMEzdCN4DrcjkHQ+TcybZKAxdhkrxqEiwH4ZAMiFyLb341T1qHqIdONjyPg1SUiXefe1oWgsxUVaNbMi9A2TrVhySivZRVsHEYuPin8FCICcl74fL3mkYoEYcgUuVtCCY8AwewodItSUeiAzRm3XsnGkNC5wDxtmYQOoS0LS2xTvGClcmyFkJhgVsyiqJGxP+o3iqJudbHdW+wzKaQwTsyq/WgxUD3SCPKfj5/kLSYEBY5m71ZeGXQNh3QpOszh1l4EFxTP8lpfvLkvjN5tZ0P+bH+FA=
      file: "${FINAL_FILE}"
      skip_cleanup: true
      overwrite: true
      on:
          tags: true
    - provider: releases
      user: Chilipp
      api_key:
          secure: hEjs//bXlppO5xWAYy4vXva+n/vTJlzfwp7+uz4IdfFCyBIxEi1D7F+5Bp7wXi1l/Up19e7/2VaaCLVoVS6trUb9KuItgr++/pTOg+hWx6Zdgv1iXW4gMshQ4KIkk/izs2l0D+eYF/AdqYqKLA9gO9KdgyqSomiXDOHNiDbGC4321nm9nbGIqCloTbBmrraFgr/B5fKvXG9nPHWfWvEyOXZzUZRD57OJn4IA5EyIN1Q8FTuobAg4LSo0NwTgEymmFySvyARRkyc5AZNsEFRVm7DTYqtKYEgl3W/g9NrZoGiZ/q/y5nioqM25eHTE5VN5VwFfZedzlqrcW58gqIGLQoJ65vpsnZT8g0fUfTKMfRP/jNENiwZ1uKUJHwLpaFxBdtRVnPlX06m95aWQMEzdCN4DrcjkHQ+TcybZKAxdhkrxqEiwH4ZAMiFyLb341T1qHqIdONjyPg1SUiXefe1oWgsxUVaNbMi9A2TrVhySivZRVsHEYuPin8FCICcl74fL3mkYoEYcgUuVtCCY8AwewodItSUeiAzRm3XsnGkNC5wDxtmYQOoS0LS2xTvGClcmyFkJhgVsyiqJGxP+o3iqJudbHdW+wzKaQwTsyq/WgxUD3SCPKfj5/kLSYEBY5m71ZeGXQNh3QpOszh1l4EFxTP8lpfvLkvjN5tZ0P+bH+FA=
      file: "gwgen_docs_${TRAVIS_TAG}.zip"
      skip_cleanup: true
      overwrite: true
      on:
          tags: true
          condition: "$BUILD_DOCS == true"
