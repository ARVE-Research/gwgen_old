language: python
env:
    global:
        - ENCRYPTION_LABEL: "56bf8f63e969"
        - COMMIT_AUTHOR_EMAIL: "philipp.sommer@unil.ch"
matrix:
    include:
        - python: 2.7
          env: BUILD_DOCS=true
        - python: 3.5
          env: BUILD_DOCS=false
services:
    - postgresql
addons:  # install gfortran
  apt:
    packages:
    - gfortran
install:
    # We do this conditionally because it saves us some downloading if the
    # version is the same.
    - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      else
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi
    # set build_docs to the real value
    - if [ "$TRAVIS_PULL_REQUEST" != "false" -o "$TRAVIS_BRANCH" != "master" -o "$BUILD_DOCS" != "true" ]; then
          BUILD_DOCS="false";
      else
          BUILD_DOCS="true";
      fi
    # make sure we use an 'innocent' default matplotlib environment
    - touch matplotlibrc
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - pip install pyyaml  # is somehow not included in the current conda installation
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Useful for debugging any issues with conda
    - conda info -a
    # install the conda constructor for releases
    - if [[ "$TRAVIS_TAG" != "" ]]; then
          conda install -n root constructor;
          sed -i "s/TRAVIS_PYTHON_VERSION/${TRAVIS_PYTHON_VERSION}*/" gwgen_conda/construct.yaml;
      fi
    - conda create -n test python="$TRAVIS_PYTHON_VERSION" dask seaborn scipy numpy statsmodels matplotlib xarray
    - source activate test
    - conda install -c conda-forge cartopy
    - pip install model-organization
    - pip install coveralls pytest
    # use latest development version
    # NOTE: Remove this when psyplot is stable enough
    - git clone "https://github.com/Chilipp/psyplot.git" -b dev
    - cd psyplot && python setup.py install && cd .. && rm -rf psyplot
    - python setup.py install
    # install necessary module for the documentation and clone the existing
    # gh-pages for this repo into the *deploy* folder and clear everything
    - export REPO=$(git config remote.origin.url)
    - if [[ "$BUILD_DOCS" == "true" ]]; then
          pip install sphinx-fortran sphinx==1.3.5 sphinx_rtd_theme ipython sphinx-argparse autodocsumm;
          git clone $REPO deploy;
          cd deploy;
          git checkout "gh-pages" || git checkout --orphan "gh-pages";
          ls -ad  | grep -v ".git$" | grep -v ".$" | grep -v "..$" | xargs rm -r;
          touch .nojekyll;
          cd ..;
      fi
    # export the environment for debugging
    - conda env export -n test

before_script:
    - "export DISPLAY=:99.0"
    - "sh -e /etc/init.d/xvfb start"
    - sleep 3 # give xvfb some time to start

script:
    # run test suite
    - py.test -xvk compile --user postgres
    # build docs
    - if [[ "$BUILD_DOCS" == "true" ]]; then
          sphinx-build docs deploy;
      fi
    # construct conda environment for releases
    - if [[ "$TRAVIS_TAG" != "" ]]; then
          constructor gwgen_conda;
      fi
    #- coverage run --source=gwgen setup.py test -a "-v -m 'not fullrun'"

after_success:
    - coveralls
    - if [[ "$BUILD_DOCS" == "true" ]]; then
          ./deploy.sh;
      fi

before_deploy:
    - ORIG_FILE=$(ls gwgen_conda-*.sh)
    - export FINAL_FILE="${ORIG_FILE/.sh/}_${TRAVIS_PYTHON_VERSION}.sh"
    - mv "$ORIG_FILE" "$FINAL_FILE"

deploy:
    provider: releases
    api_key:
        secure: fPAdjbV4Ey11TiqWQaQ1NspLggpOc3aUUz+0U1D+gnolzi3ZeljsRbRvnbVn9ZcfEbQyCdTGJ1wscODB/Q0OIv0ET8bpj1DfhRRFQqVqDVfgTfaCeDZLu1gx5quwC7wRIQ/vXBfC0x3r+fkUir7mnN5BSynngo+qwhYlGnannbSIuC2UIBQ1nh1uI7S13rjntMz4aWcU2SufKpXkowgmrKcbe/b/ihCDc+udKuZrmbPfcu3kRJBsVQ9ltRqbv2GdqWJNcMUajQfL4BVs6GLNpSPcFDez+mvGJubtABV/nSfbr1lDk653fOHS5x6Ud3VrBZ7wjyxhBE6SqhzyS3BYHUngOoiaosimEXENPe4Qbv8x4M6YQXirkEh6d0ELh1IDdpMBuFOVS3N5WanrCypoMVWj4cq2o2HR3zAHKASpTp/kt/99iMSPrvOgxvY8w+7uTMjHT/onOreiVboCUVN4QMtzRPraELDKkc0TjlxzI7pnq2KAmmg5ep5k21ULI2Sj5Ui+0S0zqurvwB05W8USXPm+Jyyp+xYHRM+NaImtlx2RCX5wjX+3ZXPYKWTBYT+TDCvpXLa0xg2V2JZF4W5x2aMVBFxYKILI0xO7vLmLHqHupGqv1vKnkztYFGMFtpAJ9iCHrubUKr3Q/+fSSBVkjSb8gfuxa4sKDTyYCknVBgk=
    file: "${FINAL_FILE}"
    skip_cleanup: true
    on:
        tags: true
